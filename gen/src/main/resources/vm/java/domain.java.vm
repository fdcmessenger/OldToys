package ${package}.domain;

import com.gitee.fdc.base.entity.BaseEntity;
import javax.persistence.Table;
import lombok.Data;
#foreach ($column in $columns)
#if($column.attrType == 'Date' && ($column.attrname != 'createBy' && $column.attrname != 'createTime' && $column.attrname != 'updateBy' && $column.attrname != 'updateTime' && $column.attrname != 'id'&& $column.attrname != 'delFlag'))
import java.util.Date;
#break
#end
#end
#foreach ($column in $columns)
#if($column.attrType == 'BigDecimal')
import java.math.BigDecimal;
#break
#end
#end
import javax.persistence.Id;
#if($primaryKey.attrType == 'String')
import tk.mybatis.mapper.annotation.KeySql;
import com.gitee.fdc.base.entity.UUIDGenId;
#else
import javax.persistence.GeneratedValue;
#end
/**
 * ${tableComment}è¡¨ ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Data
@Table(name = "${tableName}")
public class ${className} extends BaseEntity<${primaryKey.attrType}>
{
	private static final long serialVersionUID = 1L;

        @Id
#if($primaryKey.attrType == 'String')
  @KeySql(genId = UUIDGenId.class)
#else
   @GeneratedValue(generator = "JDBC")
#end
	private $primaryKey.attrType $primaryKey.attrname;
	
#foreach ($column in $columns)
#if($column.attrname != 'createBy' && $column.attrname != 'createTime' && $column.attrname != 'updateBy' && $column.attrname != 'updateTime'&& $column.attrname != 'id'&& $column.attrname != 'delFlag')
	/** $column.columnComment */
	private $column.attrType $column.attrname;
#end
#end

}
