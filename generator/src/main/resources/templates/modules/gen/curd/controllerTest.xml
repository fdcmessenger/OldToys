<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>controllerTest</name>
    <filePath>src/test/java/${packageName}/${moduleName}/web/${subModuleName}</filePath>
    <fileName>${ClassName}ControllerTest.java</fileName>
    <content><![CDATA[
/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package ${packageName}.${moduleName}.web<#if subModuleName != "">.${subModuleName}</#if>;
      
import org.hamcrest.Matchers;
import org.junit.Test;
import com.qs.BaseJunit;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

/**
 * ${functionName}Controller单元测试
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
public class ${ClassName}ControllerTest extends BaseJunit {

    @Test
    public void testList() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/${urlPrefix}/list")
                .contentType(MediaType.ALL)
                .accept(MediaType.ALL))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andDo(MockMvcResultHandlers.print())
                .andExpect(MockMvcResultMatchers.view().name(Matchers.containsString("${className}List")));
    }
    @Test
    public void testListData() throws Exception {
        mockMvc.perform(MockMvcRequestBuilders.get("/${urlPrefix}/listData")
                .contentType(MediaType.APPLICATION_JSON_UTF8)
                .param("limit", "5")
                .param("offset", "0")
                .accept(MediaType.APPLICATION_JSON))
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andDo(MockMvcResultHandlers.print())
                .andExpect(MockMvcResultMatchers.content().string(Matchers.containsString("total")))
                .andExpect(MockMvcResultMatchers.content().string(Matchers.containsString("rows")));
    }
}
]]>
    </content>
</template>